show_name = input()
codigo_vip = 1
contador = 0

while (codigo_vip != 1004):
  codigo_vip = int(input())
  
  if codigo_vip == 1000:
    contador += 1
    print("Mais um VIP! N√£o podemos esquecer de contabiliz√°-lo.")
  
  elif codigo_vip == 1001:
    print("Ingresso Normal. N√£o iremos contabiliz√°-lo.")
  
  elif codigo_vip == 1002:
    print("Ele ficar√° na frente do show, por√©m n√£o √© VIP! N√£o ser√° contabilizado tamb√©m.")
  
  elif codigo_vip == 1003:
    print("Espera, quem √© esse? Ele n√£o pagou! N√£o devemos sequer analisar sua entrada.")
  
  elif codigo_vip == 0000:
    break
  
  else:
    break

if codigo_vip == 1004:
  print("Esse c√≥digo n√£o existe! O sistema quebrou...")
  print("Vamos aguardar at√© que o suporte nos ajude.")
  comentario_aleatorio = input()

  while comentario_aleatorio != "Ajudou":
    comentario_aleatorio = input()
    print("Ainda n√£o...")

print(f"O show da Taylor Swift ser√° em {show_name} e contar√° com {contador} VIPs!")

'''

√â hora do show da Taylor Swift!

Por√©m, mesmo com toda essa euforia n√≥s precisamos organizar da melhor forma poss√≠vel. Fomos contratados para criar um programa que ajude a contabilizar o n√∫mero de pessoas no show, principalmente os VIPs! Precisamos fazer com que esse show seja impec√°vel e n√£o pare por nada, se n√£o teremos problema‚Ä¶

Entretanto, vamos lembrar que queremos um programa simples, logo vamos usar apenas condicionais e loops, pois caso contr√°rio vamos ter que refazer üòü

Input

Voc√™ receber√° primeiro o lugar do show

show_name

Depois, voc√™ ir√° receber N c√≥digos de pessoas! Correspondente a todas as pessoas que devemos analisar‚Ä¶

codigo_vip

Por√©m, devemos analisar elas com cuidado‚Ä¶

Temos algumas op√ß√µes de c√≥digo que podem ser 0000, 1000, 1001, 1002, 1003 ou 1004, onde cada um possu√≠ um significado espec√≠fico:

0000: Fim da an√°lise.
1000: VIPs
1001: Ingressos normais longe do palco.
1002: Ingressos normais perto do palco.
1003: Pessoas que n√£o pagaram.
1004: Erro.
N√£o teremos nenhum problema para a maioria dos c√≥digos e nosso principal foco s√£o os VIPs. Eles possuem o c√≥digo 1000, logo, precisamos contar toda vez que um VIP aparecer para organizar sua experi√™ncia da melhor forma poss√≠vel.

Entretanto, caso apare√ßa um 1004 ‚Ä¶ esse √© um c√≥digo v√≠rus que pode afetar nosso sistema ent√£o devemos esperar ajuda t√©cnica. Enquanto isso, voc√™ receber√° entradas aleat√≥rias que correspondem a situa√ß√£o do sistema e, somente quando a entrada for ‚ÄúAjudou‚Äù, siginifica que est√° resolvido. Mas, mesmo depois de ter recebido a ajuda, por precau√ß√£o ele n√£o receber√° mais nenhum c√≥digo pra analisar.

text_situacao

Output

Quando chegar um VIP, dever√° sempre ser contabilizado e printar a seguinte mensagem:

"Mais um VIP! N√£o podemos esquecer de contabiliz√°-lo."

Para ingressos comuns longe do palco, dever√° apenas ser printado:

"Ingresso Normal. N√£o iremos contabiliz√°-lo."

Para ingressos comuns perto do palco, dever√° apenas ser printado:

"Ele ficar√° na frente do show, por√©m n√£o √© VIP! N√£o ser√° contabilizado tamb√©m."

Quando tivermos c√≥digo 1003, dever√° apenas ser printado:

"Espera, quem √© esse? Ele n√£o pagou! N√£o devemos sequer analisar sua entrada."

Quando tivermos c√≥digo de erro, dever√° ser printado as seguintes mensagens:

"Esse c√≥digo n√£o existe! O sistema quebrou..."

"Vamos aguardar at√© que o suporte nos ajude."

Al√©m disso, enquanto se espera o input de ajuda para cada vez que o sistema n√£o tiver sido consertado dever√° mostrar:

"Ainda n√£o..."

Por fim, o programa ser√° encerrado quando n√£o tiver mais nenhum c√≥digo para analisar ou quando tiver sido consertado.

Ap√≥s o t√©rmino das an√°lises, dever√° ser mostrada a seguinte mensagem:

"O show da Taylor Swift ser√° em {show_name} e contar√° com {contador} VIPs!"

Onde show_name corresponde ao lugar do show e contador corresponde a quantidade de VIPs.

'''
